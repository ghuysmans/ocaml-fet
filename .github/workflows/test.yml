on: [push, pull_request]
name: CI
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-version:
          - 4.11.0
          - 4.10.1
          - 4.09.1
          - 4.08.1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
      - run: opam pin add fet.dev . --no-action
      - run: opam install . --deps-only --with-doc --with-test
      - run: opam exec -- dune build bin/ical_of_timetable.exe
      - name: Test
        if: matrix.os != 'windows-latest' #FIXME?
        run: opam exec -- dune runtest
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.ocaml-version }}_${{ matrix.os }}
          path: _build
  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: 4.08.1_windows-latest
          path: _build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./_build/default/bin/ical_of_timetable.exe
          asset_name: ical_of_timetable.exe
          asset_content_type: application/vnd.microsoft.portable-executable
